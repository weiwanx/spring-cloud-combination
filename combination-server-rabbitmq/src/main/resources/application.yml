# 端口
server:
  port: 8061

# 属性
spring:
  application:
    name: combination-server-rabbitmq

  # rabbitmq
  rabbitmq:
    host: localhost
    port: 5672
    virtual-host: /
    username: admin
    password:  admin
    # 是否启用【发布确认】
    publisher-confirms: true
    # 指定一个请求能处理多少个消息
    listener:
      simple:
        # 限流（海量数据，同时只能过来一条）
        prefetch: 1
        # 自动签收auto  手动 manual  默认自动签收
        acknowledge-mode: auto
        retry:
          # 开启重试机制
          enabled: true
          # 重试次数
          # max-attempts: 5
          # 最大间隔时间
          # max-interval: 20000
          # 重试间隔时间（单位毫秒）
          # initial-interval: 3000
          #乘子  重试间隔*乘子得出下次重试间隔  3s  6s  12s  24s  此处24s>20s  走20s
          # multiplier: 2
          # 重试次数超过上面的设置之后是否丢弃（false不丢弃时需要写相应代码将该消息加入死信队列）
        # default-requeue-rejected: false

#jediss:
#  url: redis://192.168.1.150
#  pool:
#    # 需确认 redis 集群的地址、端口是否一致
#    # clusterNodes: ${jediss.url}:7000,${jediss.url}:7001,${jediss.url}:7002,${jediss.url}:7003,${jediss.url}:7004,${jediss.url}:7005
#    # 开发环境 redis 配置
#    clusterNodes: ${jediss.url}:7000 #,${jediss.url}:7011,${jediss.url}:7012,${jediss.url}:7013,${jediss.url}:7014,${jediss.url}:7015
#    #扫描集群时间间隔
#    scanInterval: 20000
#    #设置对于master节点的连接池中连接数最大为1000
#    masterConnectionPoolSize: 100
#    #设置对于slave节点的连接池中连接数最大为1000
#    slaveConnectionPoolSize: 100
#    #如果当前连接池里的连接数量超过了最小空闲连接数，而同时有连接空闲时间超过了该数值，那么这些连接将会自动被关闭，并从连接池里去掉。时间单位是毫秒。
#    idleConnectionTimeout: 10000
#    #同任何节点建立连接时的等待超时。时间单位是毫秒。
#    connectTimeout: 10000
#    #等待节点回复命令的时间。该时间从命令发送成功时开始计时。
#    timeout: 30000
#    #设置心跳时间
#    pingTimeout: 10000

eureka:
  client:
    service-url:
      # eureka配置信息
      defaultZone: http://localhost:8000/eureka/
  # 注册中心地址实例id
  instance:
    prefer-ip-address: true
